* Nvidia Optimus

#+begin_src bash
sudo apt-get install bumblebee bumblebee-nvidia primus linux-headers-generic
#+end_src
    
* VDPAU VAAPI

#+begin_src bash
sudo apt-get install libvdpau1 vdpau-va-driver i965-va-driver vdpauinfo vainfo libvdpau-va-gl1
echo 'export VDPAU_DRIVER=va_gl' > ~/.bash_aliases
#+end_src
  
* Emacs

#+begin_src bash
sudo apt-get install emacs markdown emacs-goodies-el
#+end_src
  
* Plasma Apps

#+begin_src bash
sudo apt-get install konversation kwrite
#+end_src
  
* Multimedia
  
#+begin_src bash
sudo apt-get install kubuntu-restricted-extras vlc banshee easytag soundkonverter kffmpegthumbnailer kdegraphics-thumbnailers kdesdk-thumbnailers
#+end_src
  
* Calibre

#+begin_src bash
sudo -v && wget -nv -O- https://raw.githubusercontent.com/kovidgoyal/calibre/master/setup/linux-installer.py | sudo python -c "import sys; main=lambda:sys.stderr.write('Download failed\n'); exec(sys.stdin.read()); main()"
#+end_src

* Hibernate

** Check Swap

#+begin_src bash
swapon --show
#+end_src

** Create Swap

#+begin_src bash
sudo dd if=/dev/zero of=/swapfile bs=1M count=20480 status=progress
sudo chmod 600 /swapfile
sudo mkswap /swapfile
sudo swapon /swapfile
#+end_src

** Add to fstab

#+begin_src bash
sudo emacs -nw /etc/fstab

/swapfile none swap defaults 0 0
#+end_src

** Swap from file

#+begin_src bash
# swap_device
# Get swapfile UUID
findmnt -no UUID -T /swapfile

# swap_file_offset
# Get file offset
filefrag -v /swapfile | awk '$1=="0:" {print substr($4, 1, length($4)-2)}'

sudo emacs -nw /etc/default/grub
GRUB_CMDLINE_LINUX_DEFAULT="resume=UUID= resume_offset="
sudo update-grub

sudo emacs -nw /etc/initramfs-tools/conf.d/resume
RESUME=UUID= resume_offset=
sudo update-initramfs -u -k all
#+end_src

** Remove swap

#+begin_src bash
sudo swapoff /swapfile
sudo rm -f /swapfile
#+end_src

** Enable hibernation for users

#+begin_src bash
sudo nano /etc/polkit-1/rules.d/10-enable-hibernate.rules

polkit.addRule(function(action, subject) {
    if (action.id == "org.freedesktop.login1.hibernate" ||
        action.id == "org.freedesktop.login1.hibernate-multiple-sessions" ||
        action.id == "org.freedesktop.upower.hibernate" ||
        action.id == "org.freedesktop.login1.handle-hibernate-key" ||
        action.id == "org.freedesktop.login1.hibernate-ignore-inhibit")
    {
        return polkit.Result.YES;
    }
});
#+end_src

[[https://ubuntuhandbook.org/index.php/2021/08/enable-hibernate-ubuntu-21-10/][Source]]

* Android

** Install

#+begin_src bash
sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386
#+end_src

[[https://developer.android.com/studio/install#linux][Source]]

** KVM

#+begin_src bash
sudo apt-get install qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils virtinst libvirt-daemon virt-manager
#+end_src

[[https://software.intel.com/en-us/blogs/2012/03/12/how-to-start-intel-hardware-assisted-virtualization-hypervisor-on-linux-to-speed-up-intel-android-x86-emulator][Source]]

** udev Rules

#+begin_src bash
cd /etc/udev/rules.d
wget https://raw.githubusercontent.com/M0Rf30/android-udev-rules/master/51-android.rules
chmod a+r /etc/udev/rules.d/51-android.rules
#+end_src

* VirtualBox

#+begin_src bash
wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
sudo apt-get update
sudo sh -c "echo 'deb http://download.virtualbox.org/virtualbox/debian trusty contrib' >> /etc/apt/sources.list.d/oracle-virtualbox.list"
sudo apt-get update
sudo apt-get install virtualbox-5.0
sudo usermod -a -G vboxusers $USER
#+end_src

* Qt Creater

#+begin_src bash
sudo add-apt-repository ppa:ubuntu-sdk-team/ppa
sudo apt-get update
sudo apt-get install qtdeclarative5-examples qtdeclarative5-dev qmlscene qtcreator
#+end_src

* SimpleScreenReader

#+begin_src bash
sudo add-apt-repository ppa:maarten-baert/simplescreenrecorder
sudo apt-get update
sudo apt-get install simplescreenrecorder simplescreenrecorder-lib:i386
#+end_src

[[http://www.maartenbaert.be/simplescreenrecorder/#download][Source]]

* Import GPG Keys

#+begin_src bash
gpg --import secretkey.asc
gpg --edit-key KEYID trust
gpg --edit-key KEYID > Chose primary uid > primary > save
#+end_src

* Inkscape

#+begin_src bash
sudo add-apt-repository ppa:inkscape.dev/stable
sudo apt-get update
sudo apt-get install inkscape
#+end_src

* GIMP

#+begin_src bash
sudo add-apt-repository ppa:otto-kesselgulasch/gimp
sudo apt-get update
sudo apt-get install gimp gimp-gmic gimp-plugin-registry
#+end_src
	
* TLP

#+begin_src bash
sudo add-apt-repository ppa:linrunner/tlp
sudo apt-get update
sudo apt-get install tlp tlp-rdw tp-smapi-dkms acpi-call-dkms
#+end_src
	
[Source](http://linrunner.de/en/tlp/docs/tlp-linux-advanced-power-management.html#installation)

* NodeJs

#+begin_src bash
sudo apt install nodejs npm
#+end_src
	
* Xresources

#+begin_src bash
! Xft settings ---------------------------------------------------------------
Xft.dpi:        96
Xft.antialias:  true
!Xft.rgba:      rgb
Xft.rgba:       none
Xft.hinting:    true
Xft.hintstyle:  hintslight
Xft.lcdfilter: 	lcddefault
#+end_src
	
* VPN

#+begin_src bash
sudo apt install openvpn resolvconf network-manager-openvpn
#+end_src

* Tools

#+begin_src bash
sudo apt install kwrite keepassx ksshaskpass libreoffice-style-sifr deja-dup handbrake htop powertop libimage-exiftool-perl mat2
#+end_src

* SSH key permissions

#+begin_src bash
# SSH folder
chmod 700 ~/.ssh
# private and authorized keys
cd ~/.ssh
chmod 600 *
# public keys
chmod 644 *.pub
#+end_src

* Dell Fan

** See fans with =sensors= and add =dell-smm-hwmon= to modules

#+begin_src bash
sudo su
echo "options dell-smm-hwmon restricted=0 force=1" > /etc/modprobe.d/dell-smm-hwmon.conf
echo "dell-smm-hwmon" > /etc/modules
exit
sudo update-initramfs -u

# Actual old

$ cat /etc/modprobe.d/dell-smm-hwmon.conf
# This file must be at /etc/modprobe.d/
options dell-smm-hwmon restricted=0

$ cat /etc/modules
i8k

# Fresh Install
$ cat /etc/modprobe.d/dell-smm-hwmon.conf
cat: /etc/modprobe.d/dell-smm-hwmon.conf: No such file or directory

$ cat /etc/modules
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
# Parameters can be specified after the module name.


# Generated by sensors-detect on Sun Dec  3 12:43:51 2023
# Chip drivers
coretemp
#+end_src

** Control fan via =i8kutils=

#+begin_src bash
sudo apt install i8kutils
sudo su 
echo "i8k" >> /etc/modules
echo "options i8k force=1" > /etc/modprobe.d/i8k.conf
exit

# Reboot
sudo modprobe i8k force=1

# Config
/etc/i8kmon.conf
#+end_src

** Disable Dell BIOS fan control via =dell-bios-fan-control=

#+begin_src bash
git clone https://github.com/TomFreudenberg/dell-bios-fan-control.git
cd dell-bios-fan-control
make
sudo dell-bios-fan-control 0
#+end_src

[[https://askubuntu.com/questions/1094485/dell-xps-15-9570-how-to-control-the-fans][AskUbuntu]]
[[https://github.com/TomFreudenberg/dell-bios-fan-control][dell-bios-fan-control]]
[[https://keenformatics.blogspot.com/2013/06/how-to-solve-dell-laptops-fan-issues-in.html][Dell Fan Issues]]

-----

#+begin_comment
The following section is not applicable for the Dell Laptop
#+end_comment

* Thinkfan

** Installation

#+begin_src bash
sudo apt-get install thinkfan
echo "options thinkpad_acpi fan_control=1" | sudo tee /etc/modprobe.d/thinkfan.conf
#+end_src

** Config

#+begin_src bash
sudo emacs -nw /etc/thinkfan.conf
find /sys/devices -type f -name "temp*_input"

tp_fan /proc/acpi/ibm/fan
hwmon /sys/devices/platform/coretemp.0/hwmon/hwmon3/temp3_input
hwmon /sys/devices/platform/coretemp.0/hwmon/hwmon3/temp1_input
hwmon /sys/devices/platform/coretemp.0/hwmon/hwmon3/temp2_input
hwmon /sys/devices/virtual/thermal/thermal_zone0/hwmon1/temp1_input

(0,     0,      42)
(1,     40,     47)
(2,     45,     52)
(3,     50,     57)
(4,     55,     62)
(5,     60,     67)
(6,     65,     72)
(7,     70,     77)
(127,   75,     32767)
#+end_src

** Start config

#+begin_src bash
sudo emacs -nw /etc/default/thinkfan
#Additional startup parameters
START=yes
DAEMON_ARGS="-q -b 1 -s 3"
THINKFAN_ARGS="-c /etc/thinkfan.conf"
#+end_src

** Enable

#+begin_src bash
sudo systemctl enable thinkfan
#+end_src

** Test

#+begin_src bash
sudo thinkfan -n -b -5 -c /etc/thinkfan.conf
#+end_src

** Fan status

#+begin_src bash
cat /proc/acpi/ibm/thermal
#+end_src

[[http://thinkwiki.de/Thinkfan][Source]]

* Temperature Sensors Widget

#+begin_src bash
sudo apt-get install lm-sensors plasma-scriptengine-python
sudo sensors-detect
#+end_src

* Audio not working
#+begin_src bash
/etc/modprobe.d/blacklist.conf // can also create its own file
blacklist snd_soc_avs
#+end_src

* Version Upgrade
#+begin_src bash
sudo apt-get update && sudo apt-get dist-upgrade

sudo software-properties-qt or /etc/update-manager/release-upgrades

graphical - pkexec do-release-upgrade -m desktop -f DistUpgradeViewKDE
commandline - sudo do-release-upgrade -m desktop
#+end_src

[[https://help.ubuntu.com/community/OracularUpgrades/Kubuntu][Source]]